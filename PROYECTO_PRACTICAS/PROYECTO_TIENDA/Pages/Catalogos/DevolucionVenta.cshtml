@page
@model PROYECTO_TIENDA.Pages.Catalogos.Devoluciones.DevolucionVentaModel
@{
}

<script type="module">

    import CreateTable from '../js/TableComponent.js';
    import CreateDropDown from '../js/DropDownComponent.js';
    const DetallesVenta = [];
    let detalles;
    let venta;
    let Detalleventa

    const CargarDatos = async () => {
        let UrlDevolucionV = "../api/DevolucionVenta/VerDevolucion";
        let response = await fetch(UrlDevolucionV, {
            method: "POST",
            headers: {
                'Content-Type': "application/json; charset=utf-8",
                'Accept': "*/*"
            }
        });
        response = await response.json();
        //CARGAR TODOS LAS LISTAS
        console.log(response);

        venta = response[0];
        Detalleventa = response[1];

        //CARGA TABLA Venta y Detalle
        CreateTableDevolver(venta, TablaVenta, verDetalles, "Devolver");
        CreateTable(Detalleventa, TableDetalleVenta)


        //MODAL INVENTARIO
        CreateTable(response[4], TableProducto);

        //DROPDOWN
        CreateDropDown(response[3], DropUsuario, "idUsuario", "usuario")
        CreateDropDown(response[4], DropCliente, "idCliente", "nombres")
        

    }

    function creaTabla() {
        let body = document.getElementById("body");
        body.innerHTML = "";
        DetallesVenta.forEach((detalles) => {
            let fila = document.createElement("tr");
            fila.innerHTML = `
                             <td>${detalles.idDetalleVenta }</td>
                             <td>${detalles.idVenta}</td>
                             <td>${detalles.idProducto}</td>
                             <td>${detalles.idInventario}</td>
                             
                             <td>${detalles.precio}</td>
                             <td>${detalles.cantidad}</td>
                             <td>${detalles.idMedida}</td>
                             <td>${detalles.subtotal}</td>
                             <td>${detalles.iva}</td>
                             <td>${detalles.descuento}</td>
                             <td>${detalles.total}</td>`

            let eliminar = document.createElement("td");
            let btnEliminar = document.createElement("button")

            btnEliminar.classList.add("BTNEliminar");
            btnEliminar.innerText = "Eliminar";

            eliminar.appendChild(btnEliminar);
            fila.appendChild(eliminar);
            body.appendChild(fila);

            btnEliminar.onclick = (obejetDet = {}) => {
                obejetDet.target.parentNode.parentNode.remove();
                const Eliminar = DetallesVenta.indexOf(obejetDet);
                DetallesVenta.splice(Eliminar, 1);
                console.log(DetallesVenta);
            }
        })


    }
    const verDetalles = async (obj = {}) => {

        Txtdescripcion.value = obj.descripcion;
        DropUsuario.value = obj.idUsuario;

        let body = document.getElementById("body");
        body.innerHTML = "";

        detalles = Detalleventa.filter(x => x.idVenta == obj.idVenta)

         detalles.forEach((detalles) => {
            let fila = document.createElement("tr");
            fila.innerHTML = `
                             <td>${detalles.idDetalleVenta}</td>
                             <td>${detalles.idVenta}</td>
                             <td>${detalles.idProducto}</td>
                             <td>${detalles.idInventario}</td>
                             <td>${detalles.cantidad}</td>
                             <td>${detalles.idMedida}</td>
                             <td>${detalles.precio}</td>
                             <td>${detalles.subtotal}</td>
                             <td>${detalles.iva}</td>
                             <td>${detalles.descuento}</td>
                             <td>${detalles.total}</td>`
            let eliminar = document.createElement("td");
            let btnEliminar = document.createElement("button")

            btnEliminar.classList.add("BTNEliminar");
            btnEliminar.innerText = "Eliminar";

            eliminar.appendChild(btnEliminar);
            fila.appendChild(eliminar);
            body.appendChild(fila);

            btnEliminar.onclick = (obejetDet = {}) => {
                obejetDet.target.parentNode.parentNode.remove();
                const Eliminar = DetallesVenta.indexOf(obejetDet);
                DetallesVenta.splice(Eliminar, 1);
                console.log(DetallesVenta);
            }
        })
        
        //IdD = detalleVenta.filter(x => x.idVenta == obj.idVenta)

        //CreateTableDevolver(IdD, TableDetV);
        //const suma = IdD.map(id => id.total).reduce((a, v) => parseFloat(a) + parseFloat(v), 1)

        //TxtTotal.value = suma
        //console.log(IdD)
    }

    function CreateTableDevolver(Dataset = [], Table, TableFunction, BtnValue = "Restaurar") {
        const thead = Table.querySelector("thead"); //dataset= response, table=nombre de la tabla-tableproducto,?,?
        const tbody = Table.querySelector("tbody");//tbody = cuerpo de tabla, thead=encabezado de tabla
        const filter = document.createElement("div");
        filter.className = "TxtForm";
        thead.innerHTML = "";
        tbody.innerHTML = "";


        Dataset.forEach((item, index) => {
            const row = document.createElement("tr");//filas
            for (var prop in item) {

                if (index == 0) {

                    const th = document.createElement("th");//encabezados
                    th.innerText = prop;
                    thead.append(th);
                }
                const td = document.createElement("td"); //tabledata
                td.innerText = item[prop];
                row.append(td);
            }
            if (index == 0) {
                const th = document.createElement("th");
                th.innerText = "Devolucion";
                thead.append(th);

            }
            const tdAction = document.createElement("td");
            const btn = document.createElement("input");
            btn.type = "button";
            btn.className = "BTN BTNOK";
            btn.value = BtnValue;
            btn.onclick = () => {
               /* ModalFunction(Modalrestaurar);*/
                TableFunction(item);
                console.log('create')
                console.log(item);
            }
            tdAction.append(btn);
            row.append(tdAction);
            tbody.append(row);
            //contenedor.append(filter, Table);
        });

    }

    CargarDatos();

    BtnModalProducto.onclick = () => {
        ModalFunction(ModalProducto);
    }
    BtnCerrarProducto.onclick = () => {
        ModalFunction(ModalProducto);
    }
    BtnAbrirVenta.onclick = () => {
        ModalFunction(ModalVenta);
    }

    BtnCerrarVenta.onclick = () => {
        ModalFunction(ModalVenta);
    }
</script>

<h2>DEVOLUCIONES DE VENTA</h2>
@*FORMULARIO DE VENTA*@
<div class="FrmContainerDetalleV">

    <div hidden="true">
        IdVenta:
        <input class="TxtForm" type="number" id="TxtVenta" placeholder="Propiedad..." value="-1" />
    </div>
    <div>
        Fecha:
        <input class="TxtForm" type="date" id="Txtfecha" placeholder="Propiedad..." />
    </div>

    <div>
        Descripcion:
        <input class="TxtForm" type="text" id="Txtdescripcion" placeholder="Propiedad..." />
    </div>

    <div>
        Cliente:
        <select class="TxtForm" id="DropCliente">
            <option value="0">Seleccionar Cliente</option>
        </select>
    </div>

    <div>
        Usuario:
        <select class="TxtForm" id="DropUsuario">
            <option value="0">Seleccionar Usuario</option>
        </select>
    </div>

    <div>
        Total:
        <input class="TxtForm" type="number" id="TxttotalV" placeholder="Propiedad..." disabled />
    </div>

    <div>
        Estado:
        <select class="TxtForm" id="DropEstado">
            <option value="Activo">Activo</option>
            <option value="Inactivo">Inactivo</option>
        </select>
    </div>
    <div>
        <input class="BtnGuardarV" type="button" id="BtnSave" value="Guardar" />
        <input class="BtnGuardarV" type="button" id="BtnAbrirVenta" value="SeleccionarVenta" />

    </div>
</div>


@*FORMULARIO DETALLE*@

<div class="FrmContainerDetalleV">

    <div hidden="true">
        IdProducto:
        <input class="TxtForm" type="number" id="Txtproducto" placeholder="Producto" disabled />
    </div>

    <div style="display:flex;">
        <div>
            Producto:
            <input class="TxtForm" type="text" id="TxtNproducto" placeholder="Producto" disabled />
        </div>

        <input type="button" id="BtnModalProducto" class="BtnGuardarV" value="+" style="height:40px; margin-top:30px;margin-left:20px" />
    </div>

    <div hidden="true">
        IdInventario:
        <input class="TxtForm" type="number" id="TxtInvent" disabled />
    </div>

    <div>
        Cantidad:
        <input class="TxtForm" type="number" id="Txtcantidad" />
    </div>

    <div>
        Medida:
        <select class="TxtForm" id="DropMedida">
            <option value="0">Seleccionar Medida</option>
        </select>
    </div>

    <div>
        Precio:
        <input class="TxtForm" type="number" id="Txtprecio" placeholder="Propiedad..." disabled />
    </div>

    <div hidden="true">
        Subtotal:
        <input class="TxtForm" type="number" id="txtsubtotal" placeholder="Propiedad..." disabled />
    </div>

    <div hidden="true">
        IVA:
        <input class="TxtForm" type="number" id="Txtiva" placeholder="Propiedad..." disabled />
    </div>

    <div>
        Descuento:
        <input class="TxtForm" type="number" id="TxtDescuento" placeholder="Propiedad..." disabled />
    </div>

    <div hidden="true">
        Total:
        <input class="TxtForm" type="number" id="Txttotal" placeholder="Propiedad..." disabled />
    </div>
    <div>
        <button class="BtnGuardarV" id="btnDetalle" style="margin-top:32px">Guardar Detalles</button>
    </div>

</div>



@*CREACION DE TABLAS*@
<table class="TablaMaestros">
    <thead>
        <tr>
            <td>IdDetalleVenta</td>
            <td>IdVenta</td>
            <td>IdProducto</td>
            <td>IdInventario</td>
            @*<td>Articulo</td>*@
            <td>Cantidad</td>
            <td>Medida</td>
            <td>Precio</td>
            <td>Subtotal</td>
            <td>IVA</td>
            <td>Descuento</td>
            <td>Total</td>
            <td>Eliminar</td>
        </tr>
    </thead>
    <tbody id="body">
    </tbody>

</table>


@*TABLA PARA VER EL DETALLLE*@
<table id="TableDevolucion" class="FrmTable">
    <thead>
    </thead>
    <tbody>
    </tbody>
</table>

<table id="TableDetalleVenta" class="FrmTable">
    <thead>
    </thead>
    <tbody>
    </tbody>
</table>

@*TABLA PARA VER EL DETALLLE*@
<div class="ModalContent" id="ModalVenta">
    <div class="ContainerForm">
        <table id="TablaVenta" class="FrmTable">
            <thead>
            </thead>
            <tbody>
            </tbody>
        </table>

    </div>
    <input class="BTN BTNOK2" type="button" id="BtnCerrarVenta" value="Cerrar" />
</div>

@*TABLA PARA EL MODAL*@
<div class="ModalContent" id="ModalProducto">
    <div class="ContainerForm" style="width:max-content">
        <input type="text" id="TxtBusquedaProducto" class="TxtFormDetalle" placeholder="Buscar..." value="" />
        <table id="TableProducto" class="FrmTable">
            <thead>
            </thead>
            <tbody>
            </tbody>
        </table>

        <div class="FrmContainer">
            <div>
                <input class="BTN BTNOK2" type="button" id="BtnCerrarProducto" value="Cerrar" />
            </div>
        </div>
    </div>
</div>